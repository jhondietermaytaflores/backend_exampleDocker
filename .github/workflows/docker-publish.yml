on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout el repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in a DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build y push de la DockerImage
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend_example_docker:latest
          file: ./Dockerfile

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código (docker-compose.yml, setup_vm.sh)
        uses: actions/checkout@v5

      # Configurar acceso SSH
      - name: Configurar agente SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Copiar script de configuración a la VM
      - name: Copiar script de configuración a la VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "setup_vm.sh"
          target: "/tmp/"

      # Ejecutar script de instalación en la VM
      - name: Ejecutar script de instalación en la VM
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            chmod +x /tmp/setup_vm.sh
            /tmp/setup_vm.sh ${{ secrets.SSH_USER }}
            rm /tmp/setup_vm.sh

      # Copiar docker-compose.yml a la VM
      - name: Copiar docker-compose.yml a la VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.SSH_USER }}/deploy/"

      # Ejecutar docker-compose en la VM
      - name: Ejecutar docker-compose en la VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            DEPLOY_PATH="/home/${{ secrets.SSH_USER }}/deploy"
            cd $DEPLOY_PATH

            # Detener y limpiar servicios anteriores
            sudo docker-compose down

            # Descargar las imágenes de Docker
            echo ${{ secrets.DOCKER_PASSWORD }} | sudo docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            sudo docker-compose pull

            # Levantar contenedores con las nuevas imágenes
            sudo docker-compose up -d --force-recreate
            sudo docker logout

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Enviar correo con IP pública
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Despliegue completado "
          body: |
            ¡Hola!
            
            El despliegue se ha completado exitosamente.
            
            Puedes acceder a la aplicacion en:
            -> http://${{ secrets.SSH_HOST }}
            
            
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}
          secure: true